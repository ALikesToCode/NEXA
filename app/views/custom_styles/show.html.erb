<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<%=
  render(Admin::DesignHeaderComponent.new(
    title: t(:"admin.custom_styles.tab_interface"),
    selected: 1,
    ))
%>
<%= error_messages_for 'custom_style' %>
<%= form_tag update_design_themes_path, method: :post, class: "form" do %>
  <section class="form--section">
    <fieldset class="form--fieldset">
      <legend class="form--fieldset-legend"><%= I18n.t('admin.custom_styles.color_theme') %></legend>
      <div class="form--field">
        <div class="form--field-container">
          <%= styled_select_tag 'theme',
                                options_for_select(@theme_options, @current_theme),
                                container_class: '-slim' %>
        </div>
      </div>

      <%= styled_button_tag t(:button_save),
                            data:({ confirm: t('admin.custom_styles.theme_warning') } unless @current_theme.present?) %>
    </fieldset>
  </section>
<% end %>
<%= form_tag update_design_colors_path, method: :post, class: "form" do %>
  <section class="form--section">
    <fieldset class="form--fieldset">
      <legend class="form--fieldset-legend"><%= I18n.t(:label_advanced_settings) %></legend>
      <% DesignColor.setables.each do |design_color|  %>
        <div class="form--field -required">
          <label class="form--label"><%= I18n.t("admin.custom_styles.colors.#{design_color.variable}") %>:</label>
          <span class="form--field-container">
            <div class="form--field-affix">
              <%= icon_for_color(OpenStruct.new(variable: design_color.variable,
                                                hexcode: design_color.hexcode),
                                 data: { target: "#design_colors_" + design_color.variable }) %>
            </div>
            <span class="form--text-field-container">
              <%= styled_text_field_tag "design_colors[]" + design_color.variable,
                                        design_color.hexcode,
                                        class: 'design-color--variable-input',
                                        data: {  'variable-name': design_color.variable }
              %>
            </span>
          </span>
          <div class="form--field-instructions">
            <% instruction_key = "admin.custom_styles.instructions.#{design_color.variable}" %>
            <% if I18n.exists?(instruction_key, :en) %>
              <%= I18n.t(instruction_key) %>
            <% end %>
          </div>
        </div>
      <% end %>
      <button type="submit" class="button -hide-when-collapsed"><%= I18n.t(:button_save) %></button>
    </fieldset>
  </section>
  <%# Fill in the computed css variables in the inputs as their defaults %>
  <%= nonced_javascript_tag do %>
    var computedStyle = getComputedStyle(document.documentElement);
    document
      .querySelectorAll('.design-color--variable-input')
      .forEach(function(el) {
      if (!el.value || el.value === '') {
        el.placeholder = computedStyle.getPropertyValue('--' + el.dataset.variableName).trim();
      }
    });
  <% end %>
<% end %>
